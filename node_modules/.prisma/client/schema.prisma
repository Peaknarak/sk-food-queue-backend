// server/prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

/**
 * ===== Enums =====
 */
enum OrderStatus {
  created
  pending_vendor_confirmation
  accepted
  rejected
}

/**
 * ===== Models =====
 */
model User {
  id        String   @id
  type      String // 'student' | 'vendor'
  name      String
  vendorId  String? // ใส่เฉพาะถ้าเป็นผู้ขาย (id ร้าน = id ผู้ใช้ผู้ขาย)
  createdAt DateTime @default(now())
}

model Vendor {
  id        String     @id
  name      String
  approved  Boolean    @default(false)
  menus     MenuItem[]
  createdAt DateTime   @default(now())
}

model MenuItem {
  id        String   @id
  vendorId  String
  vendor    Vendor   @relation(fields: [vendorId], references: [id])
  name      String
  price     Int
  approved  Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Order {
  id          String      @id
  studentId   String
  vendorId    String
  total       Int
  status      OrderStatus
  queueNumber Int?
  createdAt   DateTime    @default(now())
  paidAt      DateTime?

  items    OrderItem[]
  messages Message[]
}

model OrderItem {
  id         String @id
  orderId    String
  order      Order  @relation(fields: [orderId], references: [id])
  menuItemId String
  name       String
  price      Int
  qty        Int
}

model QueueCounter {
  vendorId String @id
  current  Int    @default(0)
}

model Message {
  id      String   @id
  orderId String
  order   Order    @relation(fields: [orderId], references: [id])
  from    String
  text    String
  ts      DateTime @default(now())
}
